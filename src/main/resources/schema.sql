DROP TABLE IF EXISTS "FRIENDSHIP_REQUESTS";
DROP TABLE IF EXISTS "USER_FRIENDS";
DROP TABLE IF EXISTS "FILM_GENRE";
DROP TABLE IF EXISTS "LIKES";
DROP TABLE IF EXISTS "USER_FILMORATE";
DROP TABLE IF EXISTS "GENRE";
DROP TABLE IF EXISTS "FILM";
DROP TABLE IF EXISTS "RATING";

CREATE TABLE IF NOT EXISTS "USER_FILMORATE" (
  "USER_ID" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "USER_EMAIL" varchar NOT NULL,
  "USER_LOGIN" varchar NOT NULL,
  "USER_NAME" varchar,
  "USER_BIRTHDAY" date NOT NULL
);

CREATE TABLE IF NOT EXISTS "FRIENDSHIP_REQUESTS" (
  "USER_ID" int REFERENCES "USER_FILMORATE" ("USER_ID") ON DELETE CASCADE,
  "REQUESTER_ID" int REFERENCES "USER_FILMORATE" ("USER_ID") ON DELETE CASCADE,
  PRIMARY KEY ("USER_ID", "REQUESTER_ID")
);

CREATE TABLE IF NOT EXISTS "USER_FRIENDS" (
  "USER_ID" int REFERENCES "USER_FILMORATE" ("USER_ID") ON DELETE CASCADE,
  "FRIEND_ID" int REFERENCES "USER_FILMORATE" ("USER_ID") ON DELETE CASCADE,
  PRIMARY KEY ("USER_ID", "FRIEND_ID")
);

CREATE TABLE IF NOT EXISTS "RATING" (
  "RATING_ID" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "RATING_NAME" varchar(30) UNIQUE NOT NULL
);

CREATE TABLE IF NOT EXISTS "GENRE" (
  "GENRE_ID" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "GENRE_NAME" varchar(30) UNIQUE NOT NULL
);

CREATE TABLE IF NOT EXISTS "FILM" (
  "FILM_ID" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "FILM_NAME" varchar NOT NULL,
  "FILM_DESCRIPTION" varchar(200) NOT NULL,
  "FILM_RELEASE_DATE" date NOT NULL,
  "FILM_DURATION" int NOT NULL,
  "RATING_ID" int NOT NULL REFERENCES "RATING" ("RATING_ID")
);

CREATE TABLE IF NOT EXISTS "FILM_GENRE" (
  "FILM_ID" int REFERENCES "FILM" ("FILM_ID") ON DELETE CASCADE,
  "GENRE_ID" int REFERENCES "GENRE" ("GENRE_ID"),
  PRIMARY KEY ("FILM_ID", "GENRE_ID")
);

CREATE TABLE IF NOT EXISTS "LIKES" (
  "FILM_ID" int REFERENCES "FILM" ("FILM_ID") ON DELETE CASCADE,
  "USER_ID" int REFERENCES "USER_FILMORATE" ("USER_ID") ON DELETE CASCADE,
  PRIMARY KEY ("FILM_ID", "USER_ID")
);

